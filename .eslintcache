[{"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/index.js":"1","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/reportWebVitals.js":"2","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/App.js":"3","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/listView.js":"4","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/ListView.js":"5","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/PublishBtn.js":"6","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/BottomNav.js":"7","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/TopBar.js":"8","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/ListChannels.js":"9","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/Animation.js":"10"},{"size":500,"mtime":1607358812757,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607358812757,"results":"13","hashOfConfig":"12"},{"size":394,"mtime":1613653916423,"results":"14","hashOfConfig":"12"},{"size":427,"mtime":1608048497823,"results":"15","hashOfConfig":"12"},{"size":8044,"mtime":1613833772280,"results":"16","hashOfConfig":"12"},{"size":6002,"mtime":1613831774504,"results":"17","hashOfConfig":"12"},{"size":5916,"mtime":1613984862752,"results":"18","hashOfConfig":"12"},{"size":873,"mtime":1613723607388,"results":"19","hashOfConfig":"12"},{"size":1695,"mtime":1613723643008,"results":"20","hashOfConfig":"12"},{"size":419,"mtime":1613986554939,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zs5iqd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/index.js",[],["46","47"],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/reportWebVitals.js",[],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/App.js",["48"],"import React from 'react';\nimport ListView from './components/ListView';\nimport PublishBtn from './components/PublishBtn';\nimport BottomNav from './components/BottomNav';\nimport TopBar from './components/TopBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Messaging App</h1>\n      <TopBar />\n      <BottomNav />\n      <PublishBtn />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/listView.js",["49"],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/ListView.js",["50","51","52","53","54","55"],"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport {IoChevronUpOutline, IoChevronDownOutline, IoEllipsisHorizontal, IoLocationSharp} from 'react-icons/io5';\n\nfunction ListView() {\n    // Array of messages of a selected Channel\n    const [messages, setMessages] = useState([]);\n    const [data, setData] = useState([]);\n    // Array of channels\n    const [channels, setChannels] = useState([]);\n    // Holds the current selected Channel, by default \"@Main\"\n    const [selectedChannel, setSelectedChannel] = useState('@Main');\n    const [selChannelId, setChanId] = useState(1);\n    const [likes, setLikes] = useState(0);\n    // Options panel for message\n    const [options, setOptions] = useState(false);\n    const [id, setId] = useState(0);\n    const [refresh, toggleRefresh] = useState(0);\n\n    async function fetchMessages() {\n        const response = await fetch('http://localhost:8080/channelbyname/'+selectedChannel);\n        const json = await response.json();\n        setMessages(json.messages);\n        setSelectedChannel(json.channelName);\n        setChanId(json.channelId);\n        //toggleRefresh(refresh+2);\n    }\n    \n    async function fetchChannels() {\n        const response = await fetch('http://localhost:8080/channels');\n        const json = await response.json();\n        setChannels(json);\n    } \n\n    const postDelete = (msgId) => {\n        console.log(\"Deleting message (ID) \" + id);\n        axios.delete(\"http://localhost:8080/message/delete/\"+id)\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    const handleOptionsOpen = (id) => {\n        setOptions(true);\n        console.log(\"Options for message with ID: \" + id);\n        setId(id);\n    }\n    const handleOptionsClose = () => {\n        setOptions(false);\n    }\n\n    const onChannelChange = (e) => {\n        setSelectedChannel(e.target.value);\n    }\n\n    const onUpvote = (id, text, color, ht, loc, likes) => {\n        const msgData = {\n            messageId: id,\n            messageText: text,\n            messageColor: color,\n            messageHashtag: ht,\n            messageLocation: loc,\n            messageLikes: likes+1,\n            messageChannel: {\n                channelId: selChannelId\n            }\n        } \n        axios.put('http://localhost:8080/upvote', msgData)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"upvoted message \" + id);\n            } else {\n                console.log(\"Upvote failed\");\n            }\n        })\n        //window.location.reload(false);\n        toggleRefresh(refresh+1);\n    }\n\n    const onDownvote = (id, text, color, ht, loc, likes) => {\n        const msgData = {\n            messageId: id,\n            messageText: text,\n            messageColor: color,\n            messageHashtag: ht,\n            messageLocation: loc,\n            messageLikes: likes-1,\n            messageChannel: {\n                channelId: selChannelId\n            }\n        } \n        axios.put('http://localhost:8080/upvote', msgData)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"Downvoted message \" + id);\n            } else {\n                console.log(\"Downvote failed\");\n            }\n        })\n        //window.location.reload(false);\n        toggleRefresh(refresh-1);\n    }\n\n    useEffect(() => {fetchMessages()}, [selectedChannel]);\n    useEffect(() => {fetchChannels()}, []);\n    useEffect(() => {fetchMessages()}, [refresh])\n\n    console.log(channels);\n    console.log(messages);\n    console.log(\"Channel chosen: \" + selectedChannel);\n    \n    if (options === true) {\n        return(\n            <div style={{display: 'flex', flexDirection: 'column', backgroundColor: 'orange', alignItems: 'center'}}>\n                <h1>Message settings</h1>\n                <p>MessageID: {id}</p>\n                <div className='op_btns' style={{display: 'flex', flexDirection: 'column', width: 200, alignItems: 'center', margin: 20}}>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}} onClick={postDelete}>Delete</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}}>Share</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}}>Save</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}} onClick={handleOptionsClose}>Close</button>\n                </div>\n            </div>\n        )\n    }\n\n    return(\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', backgroundColor: '#d7d9db', alignItems: 'center', justifyContent: 'center', padding: 10}}>\n                <div style={{display: 'flex', marginRight: 20, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center', borderRadius: 50, paddingLeft: 30, paddingRight: 30}}>\n                    <h2 style={{margin: 20, color: '#fff'}}>Channel: </h2>\n                <select onChange={onChannelChange} style={{width: 200, height: 40, fontSize: 24, display: 'flex', BackgroundColor: '#fff'}}>\n                    {channels.map(chan =>\n                       <option \n                       key={chan.channelId} \n                       value={chan.channelName}\n                       >{chan.channelName}</option> \n                    )}\n                </select>\n                </div>\n            </div>\n            {\n            messages.map((msg) => (\n            <div key={msg.messageId} style={{backgroundColor: msg.messageColor}}>\n            <div id='jodelContainer' style={{margin: 10}}>\n                <div id='topBar' style={{display: 'flex', flexDirection: 'row'}}>\n                    <IoLocationSharp style={{color: \"#fff\", fontSize: 20, marginTop: 10, opacity: 0.7}}/>\n                    <p style={{color: \"#fff\", fontSize: 14, marginTop: 10, marginRight: 15, opacity: 0.7}}>{msg.messageLocation}</p>\n                    <p style={{color: \"#fff\", fontSize: 14, marginRight: 10}}><b>{selectedChannel}</b></p>\n                    <p style={{color: \"#fff\", fontSize: 14, opacity: 0.7}}>0s</p>\n                </div>\n                <div id='jodling' style={{display: 'flex'}}>\n                    <div id='textContent' style={{flex: 10}}>\n                        <p style={{color: \"#fff\", fontSize: 18}}>{msg.messageText}</p>\n                        <br />\n                        <p style={{color: \"#fff\", fontSize: 18}}><b>{msg.messageHashtag}</b></p>\n                        <p>{msg.messageId}</p>\n                    </div>\n                    <div id='rightControls' style={{flex: 1}}>\n                        <div id='likes' style={{display: 'flex', flexDirection: 'column'}}>\n                            <IoChevronUpOutline style={{color: \"#fff\", fontSize: 25}} \n                            onClick={() => \n                                onUpvote(msg.messageId, msg.messageText, msg.messageColor, msg.messageHashtag, msg.messageLocation, msg.messageLikes)\n                            }/>\n                            <p style={{color: \"#fff\", fontSize: 25, paddingLeft: 5}}>{msg.messageLikes}</p>\n                            <IoChevronDownOutline style={{color: \"#fff\", fontSize: 25}}\n                            onClick={() =>\n                            onDownvote(msg.messageId, msg.messageText, msg.messageColor, msg.messageHashtag, msg.messageLocation, msg.messageLikes)}/>\n                        </div>\n                    </div>\n                </div>\n                <div id='threeDots' style={{display: 'flex'}}>\n                    <IoEllipsisHorizontal style={{color: \"#fff\", fontSize: 30, flex: 1}}\n                    onClick={() => handleOptionsOpen(msg.messageId)} id={msg.messageId}/>\n                </div>\n            </div>\n            </div>\n            ))\n            }\n        </div>\n    )\n}\n\nexport default ListView;","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/PublishBtn.js",[],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/BottomNav.js",["56"],"import React, { useState, useEffect } from 'react';\nimport {MdExplore, MdTrackChanges, MdPersonPin, MdGames} from 'react-icons/md';\n\nimport ListView from './ListView';\nimport ListChannels from './ListChannels';\nimport Animation from './Animation';\n\nfunction BottomNav() {\n    const [selection, setSelection] = useState('feed');\n\n    const handleFeed = () => {\n        setSelection('feed');\n    }\n    const handleChannels = () => {\n        setSelection('channels');\n    }\n    const handleOptions = () => {\n        setSelection('options');\n    }\n    const handleFun = () => {\n        setSelection('games');\n    }\n\n    if (selection === 'feed') {\n    return(\n    <div className='OuterContainer'>\n    <ListView />\n        <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames /></button>\n            </div>\n        </div>\n    </div>\n    )\n    }\n    else if (selection === 'channels') {\n        return(\n        <div className='OuterContainer'>\n            <ListChannels />\n            <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames/></button>\n            </div>\n        </div>\n    </div>\n        )\n    }\n    else if (selection === 'options') {\n        return(\n        <div className='OuterContainer'>\n            <h1>Options</h1>\n            <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames /></button>\n            </div>\n        </div>\n    </div>\n        )\n    }\n    else if (selection === 'games') {\n        return(\n            <div className='OuterContainer'>\n                <h1>FUN</h1>\n                <Animation />\n                <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n                <div className='Channels' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleChannels}><MdTrackChanges /></button>\n                </div>\n                <div className='Feed' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleFeed}><MdExplore /></button>\n                </div>\n                <div className='Options' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleOptions}><MdPersonPin /></button>\n                </div>\n                <div className='Games' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleFun}><MdGames /></button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default BottomNav;","/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/TopBar.js",[],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/ListChannels.js",[],"/Users/feelikskilpi/Documents/Developement/webbi-react-app/src/components/Animation.js",["57","58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":12,"column":17,"nodeType":"72","endLine":12,"endColumn":20},{"ruleId":"66","severity":1,"message":"73","line":9,"column":12,"nodeType":"68","messageId":"69","endLine":9,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":9,"column":18,"nodeType":"68","messageId":"69","endLine":9,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":15,"column":12,"nodeType":"68","messageId":"69","endLine":15,"endColumn":17},{"ruleId":"66","severity":1,"message":"76","line":15,"column":19,"nodeType":"68","messageId":"69","endLine":15,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":108,"column":40,"nodeType":"79","endLine":108,"endColumn":57,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"78","line":110,"column":40,"nodeType":"79","endLine":110,"endColumn":49,"suggestions":"81"},{"ruleId":"66","severity":1,"message":"82","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"83","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"82","line":1,"column":26,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"84","line":7,"column":11,"nodeType":"68","messageId":"69","endLine":7,"endColumn":14},{"ruleId":"66","severity":1,"message":"85","line":13,"column":11,"nodeType":"68","messageId":"69","endLine":13,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":19,"column":13,"nodeType":"72","endLine":19,"endColumn":81},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'ListView' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.","ArrayExpression",["90"],["91"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'css' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [fetchMessages, selectedChannel]",{"range":"96","text":"97"},"Update the dependencies array to be: [fetchMessages, refresh]",{"range":"98","text":"99"},[3511,3528],"[fetchMessages, selectedChannel]",[3614,3623],"[fetchMessages, refresh]"]